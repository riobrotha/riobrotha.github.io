{"version":3,"file":"react.js","sources":["src/vanilla/components/alignment.ts","src/vanilla/components/animation.ts","src/vanilla/components/axis.ts","src/vanilla/components/limit.ts","src/vanilla/components/counter.ts","src/vanilla/components/direction.ts","src/vanilla/components/eventStore.ts","src/vanilla/components/vector1d.ts","src/vanilla/components/utils.ts","src/vanilla/components/dragHandler.ts","src/vanilla/components/dragTracker.ts","src/vanilla/components/pxToPercent.ts","src/vanilla/components/scrollBody.ts","src/vanilla/components/scrollBounds.ts","src/vanilla/components/scrollContain.ts","src/vanilla/components/scrollLimit.ts","src/vanilla/components/scrollLooper.ts","src/vanilla/components/scrollProgress.ts","src/vanilla/components/scrollSnap.ts","src/vanilla/components/scrollTarget.ts","src/vanilla/components/scrollTo.ts","src/vanilla/components/slideLooper.ts","src/vanilla/components/slideFocus.ts","src/vanilla/components/slidesInView.ts","src/vanilla/components/slideSizes.ts","src/vanilla/components/translate.ts","src/vanilla/components/engine.ts","src/vanilla/components/options.ts","src/vanilla/components/optionsPseudo.ts","src/vanilla/components/eventEmitter.ts","src/vanilla/index.ts","src/react/utils.ts","src/react/index.ts"],"sourcesContent":["export type AlignmentOptionType = 'start' | 'center' | 'end' | number\n\nexport type AlignmentType = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number,\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: AlignmentType = {\n    measure,\n  }\n  return self\n}\n","type CallbackType = () => void\n\nexport type AnimationType = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): AnimationType {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: CallbackType): CallbackType {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: AnimationType = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","import { DirectionOptionType } from './direction'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (rect: DOMRect) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  contentDirection: DirectionOptionType,\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(rect: DOMRect): number {\n    const { width, height } = rect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return contentDirection === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return contentDirection === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize,\n  }\n  return self\n}\n","export type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number, max: number): LimitType {\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    constrain,\n    length,\n    max,\n    min,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean,\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : Math.abs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    add,\n    clone,\n    get,\n    set,\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  applyTo: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function applyTo(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    applyTo,\n  }\n  return self\n}\n","type EventRemoverType = () => void\ntype EventHandlerType = EventListener | EventListenerObject | null\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: keyof WindowEventMap,\n    handler: EventHandlerType,\n    options?: EventOptionsType,\n  ) => EventStoreType\n  removeAll: () => EventStoreType\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: string,\n    handler: EventHandlerType,\n    options: EventOptionsType = false,\n  ): EventStoreType {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => {\n      return node.removeEventListener(type, handler, options)\n    })\n    return self\n  }\n\n  function removeAll(): EventStoreType {\n    listeners = listeners.filter((remove) => remove())\n    return self\n  }\n\n  const self: EventStoreType = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","export type Vector1DType = {\n  get: () => number\n  set: (v: Vector1DType | number) => Vector1DType\n  add: (v: Vector1DType | number) => Vector1DType\n  subtract: (v: Vector1DType | number) => Vector1DType\n  multiply: (n: number) => Vector1DType\n  divide: (n: number) => Vector1DType\n  normalize: () => Vector1DType\n}\n\nexport function Vector1D(value: number): Vector1DType {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1DType | number): Vector1DType {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1DType | number): Vector1DType {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1DType | number): Vector1DType {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1DType {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1DType {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1DType {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1DType | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / Math.abs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return Math.abs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (Math.abs(valueB) <= Math.abs(valueA)) return 0\n  const diff = deltaAbs(Math.abs(valueB), Math.abs(valueA))\n  return Math.abs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function debounce(callback: () => void, time: number): () => void {\n  let timeout = 0\n  return (): void => {\n    window.clearTimeout(timeout)\n    timeout = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function groupArray<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType[]): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function arrayLast<GenericType>(array: GenericType[]): GenericType {\n  return array[lastIndex(array)]\n}\n\nexport function lastIndex<GenericType>(array: GenericType[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function removeClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && !cl.contains(className)) cl.add(className)\n}\n","import { AnimationType } from './animation'\nimport { CounterType } from './counter'\nimport { DirectionType } from './direction'\nimport { DragTrackerType } from './dragTracker'\nimport { EventEmitterType } from './eventEmitter'\nimport { AxisType } from './axis'\nimport { EventStore } from './eventStore'\nimport { LimitType } from './limit'\nimport { ScrollBodyType } from './scrollBody'\nimport { ScrollTargetType } from './scrollTarget'\nimport { ScrollToType } from './scrollTo'\nimport { Vector1D, Vector1DType } from './vector1d'\nimport { deltaAbs, factorAbs, mathSign } from './utils'\n\nexport type DragHandlerType = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  target: Vector1DType,\n  dragFree: boolean,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  limit: LimitType,\n  events: EventEmitterType,\n): DragHandlerType {\n  const { scroll: scrollAxis, cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const startScroll = Vector1D(0)\n  const startCross = Vector1D(0)\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const snapForceBoost = { mouse: 2.5, touch: 3.5 }\n  const freeForceBoost = { mouse: 5, touch: 7 }\n  const baseSpeed = dragFree ? 5 : 12\n  const dragThreshold = 4\n\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = rootNode\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? rootNode : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number): number {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const seekNext = !targetChanged && Math.abs(force) > dragThreshold\n    const destination = force + location.get()\n\n    if (seekNext && !dragFree && !limit.reachedAny(destination)) {\n      const next = index.clone().add(mathSign(force) * -1)\n      return scrollTarget.byIndex(next.get(), 0).distance\n    }\n    return scrollTarget.byDistance(force, !dragFree).distance\n  }\n\n  function down(evt: Event): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll.set(dragTracker.readPoint(evt, scrollAxis))\n    startCross.set(dragTracker.readPoint(evt, crossAxis))\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: Event): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up()\n      const moveScroll = dragTracker.readPoint(evt, scrollAxis).get()\n      const moveCross = dragTracker.readPoint(evt, crossAxis).get()\n      const diffScroll = deltaAbs(moveScroll, startScroll.get())\n      const diffCross = deltaAbs(moveCross, startCross.get())\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up()\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.applyTo(diff))\n    evt.preventDefault()\n  }\n\n  function up(): void {\n    const rawForce = dragTracker.pointerUp() * forceBoost()\n    const force = allowedForce(direction.applyTo(rawForce))\n    const speedFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(baseSpeed + baseSpeed * speedFactor)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    events.emit('pointerUp')\n  }\n\n  function click(evt: Event): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './axis'\nimport { PxToPercentType } from './pxToPercent'\nimport { Vector1D, Vector1DType } from './vector1d'\n\nexport type DragTrackerType = {\n  pointerDown: (evt: Event) => number\n  pointerMove: (evt: Event) => number\n  pointerUp: () => number\n  readPoint: (evt: any, axis: AxisOptionType) => Vector1DType\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n): DragTrackerType {\n  const { scroll: scrollAxis } = axis\n  const coords = { x: 'clientX', y: 'clientY' }\n  const startDrag = Vector1D(0)\n  const diffDrag = Vector1D(0)\n  const lastDrag = Vector1D(0)\n  const pointValue = Vector1D(0)\n  const trackInterval = 10\n  const trackLength = 5\n  const trackTime = 100\n  let trackPoints: number[] = []\n  let lastMoveTime = new Date().getTime()\n  let isMouse = false\n\n  function readPoint(evt: any, type: AxisOptionType): Vector1DType {\n    isMouse = !evt.touches\n    const c = coords[type]\n    const value = isMouse ? evt[c] : evt.touches[0][c]\n    return pointValue.set(value)\n  }\n\n  function pointerDown(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    startDrag.set(point)\n    lastDrag.set(point)\n    return pxToPercent.measure(startDrag.get())\n  }\n\n  function pointerMove(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n\n    if (diffTime >= trackInterval) {\n      if (diffTime >= trackTime) trackPoints = []\n      trackPoints.push(point.get())\n      lastMoveTime = nowTime\n    }\n\n    diffDrag.set(point).subtract(lastDrag)\n    lastDrag.set(point)\n    return pxToPercent.measure(diffDrag.get())\n  }\n\n  function pointerUp(): number {\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n    const currentPoint = lastDrag.get()\n\n    const force = trackPoints\n      .slice(-trackLength)\n      .map((trackPoint) => currentPoint - trackPoint)\n      .sort((p1, p2) => (Math.abs(p1) < Math.abs(p2) ? 1 : -1))[0]\n\n    lastDrag.set(diffTime > trackTime || !force ? 0 : force)\n    trackPoints = []\n    return pxToPercent.measure(lastDrag.get())\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","export type PxToPercentType = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercentType {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    if (viewInPx === 0) return 0\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercentType = {\n    measure,\n    totalPercent,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D, Vector1DType } from './vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  seek: (v: Vector1DType) => ScrollBodyType\n  settle: (v: Vector1DType) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBodyType\n  useBaseSpeed: () => ScrollBodyType\n  useMass: (n: number) => ScrollBodyType\n  useSpeed: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  baseSpeed: number,\n  baseMass: number,\n): ScrollBodyType {\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(v: Vector1DType): void {\n    v.divide(mass)\n    acceleration.add(v)\n  }\n\n  function seek(v: Vector1DType): ScrollBodyType {\n    attraction.set(v).subtract(location)\n    const magnitude = map(attraction.get(), 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction.normalize().multiply(magnitude).subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(v: Vector1DType): boolean {\n    const diff = v.get() - location.get()\n    const hasSettled = !roundToTwoDecimals(diff)\n    if (hasSettled) location.set(v)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useBaseSpeed(): ScrollBodyType {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBodyType {\n    return useMass(baseMass)\n  }\n\n  function useSpeed(n: number): ScrollBodyType {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBodyType {\n    mass = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { LimitType } from './limit'\nimport { ScrollBodyType } from './scrollBody'\nimport { Vector1DType } from './vector1d'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  location: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n): ScrollBoundsType {\n  const pullBackThreshold = 10\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(location.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const friction = pointerDown ? 0.7 : 0.4\n    const diffToTarget = target.get() - location.get()\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && Math.abs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useSpeed(10).useMass(3)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Limit, LimitType } from './limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollContainOptionType = '' | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snaps: number[],\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, snaps[0])\n  const snapsBounded = snapsAligned.map(scrollBounds.constrain)\n  const snapsContained = measureContained()\n\n  function findDuplicates(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = findDuplicates()\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n  }\n  return self\n}\n","import { Limit, LimitType } from './limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean,\n): ScrollLimitType {\n  const limit = measureLimit()\n\n  function measureLimit(): LimitType {\n    const startSnap = scrollSnaps[0]\n    const endSnap = arrayLast(scrollSnaps)\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit(min, max)\n  }\n\n  const self: ScrollLimitType = {\n    limit,\n  }\n  return self\n}\n","import { Limit, LimitType } from './limit'\nimport { PxToPercentType } from './pxToPercent'\nimport { Vector1DType } from './vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  pxToPercent: PxToPercentType,\n  limit: LimitType,\n  location: Vector1DType,\n  vectors: Vector1DType[],\n): ScrollLooperType {\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop,\n  }\n  return self\n}\n","import { LimitType } from './limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length: scrollLength } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return currentLocation / -scrollLength\n  }\n\n  const self: ScrollProgressType = {\n    get,\n  }\n  return self\n}\n","import { AlignmentType } from './alignment'\nimport { AxisType } from './axis'\nimport { PxToPercentType } from './pxToPercent'\nimport { arrayLast, groupArray } from './utils'\n\nexport type ScrollSnapType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnap(\n  axis: AxisType,\n  alignment: AlignmentType,\n  pxToPercent: PxToPercentType,\n  containerRect: DOMRect,\n  slideRects: DOMRect[],\n  slidesToScroll: number,\n): ScrollSnapType {\n  const { startEdge, endEdge } = axis\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupArray(slideRects, slidesToScroll)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(pxToPercent.measure)\n      .map(Math.abs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map(pxToPercent.measure)\n      .map((snap) => -Math.abs(snap))\n  }\n\n  function measureAligned(): number[] {\n    const groupedSnaps = groupArray(snaps, slidesToScroll).map((g) => g[0])\n    const alignments = measureSizes().map(alignment.measure)\n    return groupedSnaps.map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapType = {\n    snaps,\n    snapsAligned,\n  }\n  return self\n}\n","import { LimitType } from './limit'\nimport { Vector1DType } from './vector1d'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType,\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return Math.abs(d1) < Math.abs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => Math.abs(d1.diff) - Math.abs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return Math.abs(shortest) * direction\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { AnimationType } from './animation'\nimport { CounterType } from './counter'\nimport { EventEmitterType } from './eventEmitter'\nimport { ScrollTargetType, TargetType } from './scrollTarget'\nimport { Vector1DType } from './vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  events: EventEmitterType,\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetVector.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { AxisType } from './axis'\nimport { arrayKeys } from './utils'\nimport { SlidesInViewType } from './slidesInView'\nimport { Vector1DType } from './vector1d'\n\ntype EdgeType = 'start' | 'end'\n\ntype LoopPointType = {\n  point: number\n  location: number\n  index: number\n  getTarget: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  viewSize: number,\n  contentSize: number,\n  slideSizesWithGaps: number[],\n  scrollSnaps: number[],\n  slidesInView: SlidesInViewType,\n  scrollLocation: Vector1DType,\n  slides: HTMLElement[],\n): SlideLooperType {\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: EdgeType): LoopPointType[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter((b) => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const getTarget = (): number =>\n        scrollLocation.get() > point ? initial : altered\n      return { point, getTarget, index, location: -1 }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget()\n      if (target !== location) {\n        slides[index].style[axis.startEdge] = `${target}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[axis.startEdge] = ''\n    })\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { EventStore, EventStoreType } from './eventStore'\nimport { ScrollToType } from './scrollTo'\n\nexport type SlideFocusType = {\n  addActivationEvents: (slides: HTMLElement[]) => void\n  removeAllEvents: EventStoreType['removeAll']\n}\n\nexport function SlideFocus(\n  rootNode: HTMLElement,\n  scrollTo: ScrollToType,\n  slidesToScroll: number,\n): SlideFocusType {\n  const eventStore = EventStore()\n  const removeAllEvents = eventStore.removeAll\n  let lastTabPressTime = 0\n\n  function registerTabPress(event: Event): void {\n    if ((event as KeyboardEvent).keyCode !== 9) return\n    lastTabPressTime = new Date().getTime()\n  }\n\n  function addFocusEvent(slide: HTMLElement, index: number): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n      if (diffTime > 10) return\n\n      rootNode.scrollLeft = 0\n      const selectedIndex = Math.floor(index / slidesToScroll)\n      scrollTo.index(selectedIndex, 0)\n    }\n    eventStore.add(slide, 'focus', focus, true)\n  }\n\n  function addActivationEvents(slides: HTMLElement[]): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addFocusEvent)\n  }\n\n  const self: SlideFocusType = {\n    addActivationEvents,\n    removeAllEvents,\n  }\n  return self\n}\n","type SlideBoundType = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInViewType = {\n  check: (location: number) => number[]\n  findSlideBounds: (offset: number, threshold?: number) => SlideBoundType[]\n}\n\nexport function SlidesInView(\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  snaps: number[],\n  loop: boolean,\n  inViewThreshold: number,\n): SlidesInViewType {\n  const threshold = Math.min(Math.max(inViewThreshold, 0.01), 0.99)\n  const offsets = loop ? [0, contentSize, -contentSize] : [0]\n  const slideBounds = offsets.reduce((a: SlideBoundType[], offset) => {\n    return a.concat(findSlideBounds(offset, threshold))\n  }, [])\n\n  function findSlideBounds(\n    offset: number,\n    threshold?: number,\n  ): SlideBoundType[] {\n    const thresholds = slideSizes.map((s) => s * (threshold || 0))\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + thresholds[index] + offset,\n      end: snap + viewSize - thresholds[index] + offset,\n      index,\n    }))\n  }\n\n  function check(location: number): number[] {\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < location && end > location\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInViewType = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { AxisType } from './axis'\nimport { PxToPercentType } from './pxToPercent'\nimport { arrayLast, lastIndex } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  pxToPercent: PxToPercentType,\n  slides: HTMLElement[],\n  slideRects: DOMRect[],\n  loop: boolean,\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const sizesInPx = slideRects.map(measureSize)\n  const slideSizes = sizesInPx.map(pxToPercent.measure)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isLast = index === lastIndex(rects)\n        const style = window.getComputedStyle(arrayLast(slides))\n        const endGap = parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n        if (isLast) return sizesInPx[index] + (loop ? endGap : 0)\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(pxToPercent.measure)\n      .map(Math.abs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n  }\n  return self\n}\n","import { AxisType } from './axis'\nimport { DirectionType } from './direction'\nimport { Vector1DType } from './vector1d'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (vector: Vector1DType) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement,\n): TranslateType {\n  const containerStyle = container.style\n  const translate = axis.scroll === 'x' ? x : y\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(target: Vector1DType): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.applyTo(target.get()))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Animation, AnimationType } from './animation'\nimport { Axis, AxisType } from './axis'\nimport { Counter, CounterType } from './counter'\nimport { Direction, DirectionType } from './direction'\nimport { DragHandler, DragHandlerType } from './dragHandler'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitterType } from './eventEmitter'\nimport { LimitType } from './limit'\nimport { OptionsType } from './options'\nimport { PxToPercent, PxToPercentType } from './pxToPercent'\nimport { ScrollBody, ScrollBodyType } from './scrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './scrollBounds'\nimport { ScrollContain } from './scrollContain'\nimport { ScrollLimit } from './scrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './scrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './scrollProgress'\nimport { ScrollSnap } from './scrollSnap'\nimport { ScrollTarget, ScrollTargetType } from './scrollTarget'\nimport { ScrollTo, ScrollToType } from './scrollTo'\nimport { SlideLooper, SlideLooperType } from './slideLooper'\nimport { SlideFocus, SlideFocusType } from './slideFocus'\nimport { SlidesInView, SlidesInViewType } from './slidesInView'\nimport { SlideSizes } from './slideSizes'\nimport { Translate, TranslateType } from './translate'\nimport { arrayKeys, arrayLast, lastIndex } from './utils'\nimport { Vector1D, Vector1DType } from './vector1d'\n\nexport type Engine = {\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  options: OptionsType\n  pxToPercent: PxToPercentType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  slideFocus: SlideFocusType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  target: Vector1DType\n  translate: TranslateType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnaps: number[]\n  slideIndexes: number[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: OptionsType,\n  events: EventEmitterType,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    containScroll,\n  } = options\n\n  // Measurements\n  const containerRect = container.getBoundingClientRect()\n  const slideRects = slides.map((slide) => slide.getBoundingClientRect())\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const pxToPercent = PxToPercent(axis.measureSize(containerRect))\n  const viewSize = pxToPercent.totalPercent\n  const alignment = Alignment(align, viewSize)\n  const { slideSizes, slideSizesWithGaps } = SlideSizes(\n    axis,\n    pxToPercent,\n    slides,\n    slideRects,\n    loop,\n  )\n  const { snaps, snapsAligned } = ScrollSnap(\n    axis,\n    alignment,\n    pxToPercent,\n    containerRect,\n    slideRects,\n    slidesToScroll,\n  )\n  const contentSize = arrayLast(snaps) * -1 + arrayLast(slideSizesWithGaps)\n  const { snapsContained } = ScrollContain(\n    viewSize,\n    contentSize,\n    snaps,\n    snapsAligned,\n    containScroll,\n  )\n\n  const contain = !loop && containScroll !== ''\n  const scrollSnaps = contain ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(lastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Draw\n  const update = (): void => {\n    if (!loop) engine.scrollBounds.constrain(engine.dragHandler.pointerDown())\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (settled && !engine.dragHandler.pointerDown()) {\n      engine.animation.stop()\n      events.emit('settle')\n    }\n    if (!settled) {\n      events.emit('scroll')\n    }\n    if (loop) {\n      engine.scrollLooper.loop(engine.scrollBody.direction())\n      engine.slideLooper.loop()\n    }\n\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(location, speed, 1)\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target,\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n    events,\n  )\n  const slidesInView = SlidesInView(\n    viewSize,\n    contentSize,\n    slideSizes,\n    snaps,\n    loop,\n    inViewThreshold,\n  )\n\n  // DragHandler\n  const dragHandler = DragHandler(\n    axis,\n    direction,\n    root,\n    target,\n    dragFree,\n    DragTracker(axis, pxToPercent),\n    location,\n    animation,\n    scrollTo,\n    scrollBody,\n    scrollTarget,\n    index,\n    limit,\n    events,\n  )\n\n  // Slider\n  const engine: Engine = {\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds(limit, location, target, scrollBody),\n    scrollLooper: ScrollLooper(contentSize, pxToPercent, limit, location, [\n      location,\n      target,\n    ]),\n    scrollProgress: ScrollProgress(limit),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideFocus: SlideFocus(root, scrollTo, slidesToScroll),\n    slideLooper: SlideLooper(\n      axis,\n      viewSize,\n      contentSize,\n      slideSizesWithGaps,\n      scrollSnaps,\n      slidesInView,\n      location,\n      slides,\n    ),\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate(axis, direction, container),\n  }\n  return engine\n}\n","import { AlignmentOptionType } from './alignment'\nimport { AxisOptionType } from './axis'\nimport { DirectionOptionType } from './direction'\nimport { ScrollContainOptionType } from './scrollContain'\n\nexport type OptionsType = {\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  dragFree: boolean\n  draggable: boolean\n  draggableClass: string\n  draggingClass: string\n  inViewThreshold: number\n  loop: boolean\n  selectedClass: string\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  direction: 'ltr',\n  dragFree: false,\n  draggable: true,\n  draggableClass: 'is-draggable',\n  draggingClass: 'is-dragging',\n  inViewThreshold: 0,\n  loop: false,\n  selectedClass: 'is-selected',\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { EmblaOptionsType } from './options'\n\nexport type OptionsPseudoType = {\n  get: () => EmblaOptionsType\n}\n\nexport function OptionsPseudo(node: HTMLElement): OptionsPseudoType {\n  const pseudoString = window.getComputedStyle(node, ':before').content\n\n  function get(): EmblaOptionsType {\n    try {\n      return JSON.parse(pseudoString.slice(1, -1).replace(/\\\\/g, ''))\n    } catch (error) {} // eslint-disable-line no-empty\n    return {}\n  }\n\n  const self: OptionsPseudoType = {\n    get,\n  }\n  return self\n}\n","type CallbackType = (evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitterType = {\n  emit: (evt: EmblaEventType) => EventEmitterType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventEmitterType\n}\n\nexport function EventEmitter(): EventEmitterType {\n  const listeners: ListenersType = {}\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    const eventListeners = listeners[evt]\n    return eventListeners || []\n  }\n\n  function emit(evt: EmblaEventType): EventEmitterType {\n    getListeners(evt).forEach((e) => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventEmitterType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventEmitterType = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { Engine } from './components/engine'\nimport { EventStore } from './components/eventStore'\nimport { defaultOptions, EmblaOptionsType } from './components/options'\nimport { OptionsPseudo, OptionsPseudoType } from './components/optionsPseudo'\nimport { addClass, debounce, removeClass } from './components/utils'\nimport {\n  EventEmitter,\n  EmblaEventType,\n  EventEmitterType,\n} from './components/eventEmitter'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  dangerouslyGetEngine: () => Engine\n  destroy: () => void\n  off: EventEmitterType['off']\n  on: EventEmitterType['on']\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  sliderRoot: HTMLElement,\n  userOptions?: EmblaOptionsType,\n): EmblaCarouselType {\n  const events = EventEmitter()\n  const eventStore = EventStore()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let optionsBase = Object.assign({}, defaultOptions)\n  let options = Object.assign({}, optionsBase)\n  let optionsPseudo: OptionsPseudoType\n  let rootNodeSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  activate(userOptions)\n\n  function setupElements(): void {\n    if (!sliderRoot) throw new Error('Missing root node 😢')\n    const sliderContainer = sliderRoot.querySelector('*')\n    if (!sliderContainer) throw new Error('Missing container node 😢')\n\n    container = sliderContainer as HTMLElement\n    slides = Array.prototype.slice.call(container.children)\n    optionsPseudo = OptionsPseudo(sliderRoot)\n  }\n\n  function activate(partialOptions?: EmblaOptionsType): void {\n    setupElements()\n    optionsBase = Object.assign({}, optionsBase, partialOptions)\n    options = Object.assign({}, optionsBase, optionsPseudo.get())\n    engine = Engine(sliderRoot, container, slides, options, events)\n    eventStore.add(window, 'resize', debouncedResize)\n    engine.translate.to(engine.location)\n    rootNodeSize = engine.axis.measureSize(sliderRoot.getBoundingClientRect())\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        return activate({ loop: false })\n      }\n      engine.slideLooper.loop()\n    }\n    if (options.draggable && container.offsetParent && slides.length) {\n      engine.dragHandler.addActivationEvents()\n      if (options.draggableClass) {\n        addClass(sliderRoot, options.draggableClass)\n      }\n      if (options.draggingClass) {\n        events\n          .on('pointerDown', toggleDraggingClass)\n          .on('pointerUp', toggleDraggingClass)\n      }\n    }\n    if (slides.length) {\n      engine.slideFocus.addActivationEvents(slides)\n    }\n    if (options.selectedClass) {\n      toggleSelectedClass()\n      events\n        .on('select', toggleSelectedClass)\n        .on('pointerUp', toggleSelectedClass)\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function toggleDraggingClass(evt: EmblaEventType): void {\n    const { draggingClass } = options\n    if (evt === 'pointerDown') addClass(sliderRoot, draggingClass)\n    else removeClass(sliderRoot, draggingClass)\n  }\n\n  function toggleSelectedClass(): void {\n    const { selectedClass } = options\n    const inView = slidesInView(true)\n    const notInView = slidesNotInView(true)\n    notInView.forEach((index) => removeClass(slides[index], selectedClass))\n    inView.forEach((index) => addClass(slides[index], selectedClass))\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.slideFocus.removeAllEvents()\n    engine.animation.stop()\n    eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    removeClass(sliderRoot, options.draggableClass)\n    slides.forEach((slide) => removeClass(slide, options.selectedClass))\n    events\n      .off('select', toggleSelectedClass)\n      .off('pointerUp', toggleSelectedClass)\n      .off('pointerDown', toggleDraggingClass)\n      .off('pointerUp', toggleDraggingClass)\n  }\n\n  function reActivate(partialOptions?: EmblaOptionsType): void {\n    if (!activated) return\n    const startIndex = selectedScrollSnap()\n    const newOptions = Object.assign({ startIndex }, partialOptions)\n    deActivate()\n    activate(newOptions)\n    events.emit('reInit')\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    if (!activated) return\n    const size = engine.axis.measureSize(sliderRoot.getBoundingClientRect())\n    if (rootNodeSize !== size) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter((index) => inView.indexOf(index) === -1)\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    engine.scrollBody.useBaseMass().useSpeed(jump ? 100 : options.speed)\n    if (activated) engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function dangerouslyGetEngine(): Engine {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return sliderRoot\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    dangerouslyGetEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  return self\n}\n\nexport default EmblaCarousel\n","export function canUseDOM(): boolean {\n  return !!(\n    typeof window !== 'undefined' &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport function areEqualShallow(\n  objectA: { [key: string]: any },\n  objectB: { [key: string]: any },\n): boolean {\n  return (\n    Object.keys(objectA).length === Object.keys(objectB).length &&\n    Object.keys(objectA).every((objectKey) => {\n      if (!Object.prototype.hasOwnProperty.call(objectB, objectKey)) {\n        return false\n      }\n      return objectA[objectKey] === objectB[objectKey]\n    })\n  )\n}\n","import { useRef, useEffect, useState, useMemo } from 'react'\nimport EmblaCarousel, { EmblaCarouselType } from '../vanilla'\nimport { EmblaOptionsType } from '../vanilla/components/options'\nimport { areEqualShallow, canUseDOM } from './utils'\n\ntype ViewportRefType = <ViewportElement extends HTMLElement>(\n  instance: ViewportElement | null,\n) => void\n\nexport type UseEmblaCarouselType = [\n  ViewportRefType,\n  EmblaCarouselType | undefined,\n]\n\nfunction useEmblaCarousel(\n  options: EmblaOptionsType = {},\n): UseEmblaCarouselType {\n  const [embla, setEmbla] = useState<EmblaCarouselType>()\n  const [viewport, setViewport] = useState<HTMLElement>()\n  const storedOptions = useRef<EmblaOptionsType>(options)\n  const activeOptions = useMemo<EmblaOptionsType>(() => {\n    if (!areEqualShallow(storedOptions.current, options)) {\n      storedOptions.current = options\n    }\n    return storedOptions.current\n  }, [storedOptions, options])\n\n  useEffect(() => {\n    if (canUseDOM() && viewport) {\n      const newEmbla = EmblaCarousel(viewport, activeOptions)\n      setEmbla(newEmbla)\n      return () => newEmbla.destroy()\n    } else {\n      setEmbla(undefined)\n    }\n  }, [viewport, activeOptions, setEmbla])\n\n  return [setViewport as ViewportRefType, embla]\n}\n\nexport { useEmblaCarousel }\n"],"names":["Alignment","align","viewSize","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","contentDirection","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","rect","width","height","Limit","min","max","length","Math","abs","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","set","add","clone","Direction","direction","sign","applyTo","EventStore","listeners","node","type","handler","options","addEventListener","push","removeEventListener","removeAll","filter","remove","Vector1D","value","vector","readNumber","subtract","multiply","divide","normalize","map","iStart","iStop","oStart","oStop","mathSign","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","debounce","time","timeout","clearTimeout","setTimeout","groupArray","array","size","groups","i","slice","arrayKeys","Object","keys","arrayLast","lastIndex","removeClass","className","cl","classList","contains","addClass","DragHandler","rootNode","target","dragFree","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","index","limit","events","scrollAxis","crossAxis","focusNodes","startScroll","startCross","dragStartPoint","activationEvents","interactionEvents","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","dragThreshold","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","currentLocation","byDistance","targetChanged","seekNext","destination","next","byIndex","distance","evt","button","isMoving","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","moveScroll","moveCross","diffScroll","diffCross","pointerMove","rawForce","pointerUp","speedFactor","clickAllowed","DragTracker","pxToPercent","coords","x","y","startDrag","diffDrag","lastDrag","pointValue","trackInterval","trackLength","trackTime","trackPoints","lastMoveTime","Date","getTime","touches","c","point","nowTime","diffTime","currentPoint","trackPoint","sort","p1","p2","PxToPercent","viewInPx","totalPercent","ScrollBody","baseMass","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","speed","mass","update","applyForce","v","seek","magnitude","settle","hasSettled","useBaseSpeed","useMass","ScrollBounds","pullBackThreshold","disabled","shouldConstrain","friction","diffToTarget","toggleActive","ScrollContain","contentSize","snaps","snapsAligned","containScroll","scrollBounds","snapsBounded","snapsContained","measureContained","findDuplicates","startSnap","endSnap","lastIndexOf","_a","ScrollLimit","scrollSnaps","measureLimit","ScrollLooper","vectors","shouldLoop","loopDistance","forEach","ScrollProgress","scrollLength","ScrollSnap","alignment","containerRect","slideRects","slidesToScroll","measureUnaligned","measureAligned","measureSizes","rects","snap","groupedSnaps","g","alignments","ScrollTarget","targetVector","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","t1","t2","t3","shortest","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideLooper","slideSizesWithGaps","slidesInView","scrollLocation","slides","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","removeSlideSizes","indexes","from","reduce","a","slidesInGap","gap","remainingGap","findLoopPoints","edge","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","b","getTarget","canLoop","every","otherIndexes","loopPoint","style","clear","SlideFocus","eventStore","lastTabPressTime","registerTabPress","event","keyCode","addFocusEvent","slide","focus","scrollLeft","selectedIndex","floor","SlidesInView","slideSizes","inViewThreshold","threshold","offsets","thresholds","s","check","list","slideBound","inList","inView","SlideSizes","sizesInPx","measureWithGaps","isLast","getComputedStyle","endGap","parseFloat","getPropertyValue","Translate","container","containerStyle","translate","to","transform","Engine","root","startIndex","getBoundingClientRect","_b","contain","slideIndexes","engine","dragHandler","settled","scrollLooper","slideLooper","startLocation","scrollProgress","slideFocus","defaultOptions","draggable","draggableClass","draggingClass","selectedClass","OptionsPseudo","pseudoString","content","JSON","parse","replace","error","EventEmitter","getListeners","eventListeners","e","on","off","EmblaCarousel","sliderRoot","userOptions","debouncedResize","resize","reInit","reActivate","activated","optionsBase","optionsPseudo","rootNodeSize","activate","setupElements","Error","sliderContainer","querySelector","Array","prototype","call","children","partialOptions","deActivate","offsetParent","toggleDraggingClass","toggleSelectedClass","notInView","slidesNotInView","selectedScrollSnap","newOptions","destroy","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","dangerouslyGetEngine","containerNode","slideNodes","canUseDOM","createElement","areEqualShallow","objectA","objectB","objectKey","hasOwnProperty","useEmblaCarousel","useState","embla","setEmbla","viewport","setViewport","storedOptions","useRef","activeOptions","useMemo","current","useEffect","newEmbla_1"],"mappings":"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"}